generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Board {
  id        String  @id @default(cuid())
  title     String
  ownerId   String?
  owner     User?   @relation(fields: [ownerId], references: [id], onDelete: Cascade, name: "BoardOwner")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notes     Note[]
  members   BoardMember[]
}

model Note {
  id        String   @id @default(cuid())
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)

  text      String   @default("")
  x         Int      @default(100)
  y         Int      @default(100)
  color     String   @default("#fde047") // yellow-300
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boardId])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String   // bcrypt hash
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  boards    Board[]   @relation("BoardOwner")
  members   BoardMember[]
}

model BoardMember {
  id        String   @id @default(cuid())
  boardId   String
  userId    String
  role      String   @default("member") // possible values: "member", "editor", "viewer", etc.
  createdAt DateTime @default(now())

  board Board @relation(fields: [boardId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([boardId, userId])
  @@index([userId])
}
